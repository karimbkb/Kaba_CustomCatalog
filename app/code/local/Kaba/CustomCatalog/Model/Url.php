<?php

class Kaba_CustomCatalog_Model_Url extends Mage_Core_Model_Abstract
{
	const TARGET_PATH = 'customcatalog/index/index/';
	
	public $requestPath = null;
	public $pageUrl = null;
	public $storeIds = null;
	
	public function addUrl()
	{		
		$idPath = self::TARGET_PATH . $this->pageUrl;
		
		$this->_removeExistingUrls();
		
		foreach($this->storeIds as $storeId) {
			$urlRewrite = Mage::getSingleton('core/factory')->getUrlRewriteInstance();								
			Mage::helper('core/url_rewrite')->validateRequestPath($this->requestPath);	
			
			$targetPath = self::TARGET_PATH . $this->requestPath;	
			$urlRewrite->setIdPath($targetPath)
			->setTargetPath($targetPath)
			->setOptions('')
			->setDescription('Generated by Kaba_CustomCatalog for easy campaign/seo pages.')
			->setRequestPath($this->requestPath);
			
			$urlRewrite->setIsSystem(0);
		
		
			$urlRewrite->setStoreId($storeId);		
			$urlRewrite->save();
		}	
	}
	
	protected function _removeExistingUrls()
	{
		$idPath = self::TARGET_PATH . $this->pageUrl;		
		$urlsFound = true;
		
		while($urlsFound) {
			$urlRewrite = Mage::getSingleton('core/factory')->getUrlRewriteInstance()->loadByIdPath($idPath);	
			if(!$urlRewrite->getUrlRewriteId()) {
				$urlsFound = false;
			}			
			$urlRewrite->delete();
		}		
	}
	
	public function setCurrentPageUrl($pageId)
	{
		$page = Mage::getModel('customcatalog/page')->load($pageId);
		$data = $page->getData();
		
		$this->pageUrl = $data['page_url'];
	}
		
	public function setRequestPath($requestPath)
	{
		$this->requestPath = $requestPath;
	}
	
	public function setStoreIds($storeIds)
	{
		$this->storeIds = $storeIds;
	}
}